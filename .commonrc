#!/bin/sh

SHELL=`ps -p $$ | tail -1 | awk '{print $4}'`
export EDITOR=${EDITOR:-vim}
DOTFILES_DIR=`readlink ${HOME}/.commonrc | xargs dirname`
update_dotfiles () {
    echo Updating dotfiles
    RET=$(\
        cd ${DOTFILES_DIR}; git remote prune origin; git pull \
    )
    echo "$RET"
    echo Rerun init.sh and reload .${SHELL}rc
    ${DOTFILES_DIR}/init.sh
    source ~/.${SHELL}rc
}

check_dotfiles_update_using_github_api () {
    DISPLAY=; ping 1.1.1.1 -q -W 1 -c 1 > /dev/null
    if [ $? -ne 0 ]; then
        return -1
    fi

    LATEST_SHA=$(curl -s -H "Accept: application/vnd.github.v3+json" \
        https://api.github.com/repos/yuxia228/dotfiles/commits/master \
        | grep sha \
        | head -1 \
        | cut -d'"' -f 4
    )
    CURRENT_SHA=$(cd ${DOTFILES_DIR}; git log | head -1 | awk '{print $2}'
    )
    if [ "$LATEST_SHA" != "$CURRENT_SHA" ];then
        echo "dotfiles is out of date." > /dev/stderr
        echo "=> Please update dotfiles to run 'update_dotfiles' on shell" > /dev/stderr
    fi
}
check_dotfiles_update_using_github_api

export PATH=$PATH:${HOME}/bin
if [ -e /home/linuxbrew/.linuxbrew/bin ]; then
    export PATH=$PATH:/home/linuxbrew/.linuxbrew/bin:
fi
source ${HOME}/.aliases
source ${HOME}/.variables

# Common Process
set_term () {
    _terms=(xterm-256color xterm-16color xterm)
    for t in "${_terms[@]}";do
        if infocmp >&/dev/null;then
            break
        else
            export TERM=$t
        fi
    done
}

if [ "$TERM" = "alacritty" ]; then
    TERM=xterm-256color
    set_term
fi

case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# Functions
csv_viewer () {
    column -s, -t < $1 | less -#2 -N -S
}

if [[ ! -x `which peco` ]]; then
    return
fi

cdup(){
      cd `for i in $(seq 0 $(pwd | awk -F/ '{print NF}')); do pwd | grep -oE "^/([^/]*/){$i}" ; done | peco`
}

peco-cd () {
    local sw="1"
    while [ "$sw" != "0" ]
    do
        if [ "$sw" = "1" ];then
            local list=$(echo -e "---$PWD\n../\n$( ls -F | grep / )\n---Show hidden directory\n---Show files, $(echo $(ls -F | grep -v / ))\n---HOME DIRECTORY")
        elif [ "$sw" = "2" ];then
            local list=$(echo -e "---$PWD\n$( ls -a -F | grep / | sed 1d )\n---Hide hidden directory\n---Show files, $(echo $(ls -F | grep -v / ))\n---HOME DIRECTORY")
        else
            local list=$(echo -e "---BACK\n$( ls -F | grep -v / )")
        fi

        local slct=$(echo -e "$list" | peco )

        if [ "$slct" = "---$PWD" ];then
            local sw="0"
        elif [ "$slct" = "---Hide hidden directory" ];then
            local sw="1"
        elif [ "$slct" = "---Show hidden directory" ];then
            local sw="2"
        elif [ "$slct" = "---Show files, $(echo $(ls -F | grep -v / ))" ];then
            local sw=$(($sw+2))
        elif [ "$slct" = "---HOME DIRECTORY" ];then
            cd "$HOME"
        elif [[ "$slct" =~ / ]];then
            cd "$slct"
        elif [ "$slct" = "" ];then
            :
        else
            local sw=$(($sw-2))
        fi
    done
}
alias sd='peco-cd'
